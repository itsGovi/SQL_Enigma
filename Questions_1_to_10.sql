--Question 1:Retrieve all employees hired in the last 12 months.

SELECT employee_id,full_name,hire_date 
FROM employees
WHERE hire_date > CURRENT_DATE - INTERVAL '1 year';
-- ANSWER: 19


-- Question 2: List the total number of employees in each department.

SELECT COUNT(employee_id), department
FROM employees
GROUP BY department;
--ANSWER: 5 departments


-- Questions 3: Calculate the average `base_salary` by `region`.
SELECT AVG(base_salary), region
FROM employees
GROUP BY region
-- ANSWER: 3 regions


-- Question 4: Identify employees with department and positions who work remotely more than 30% of the time
SELECT 
    COUNT(employee_id), --remove count for all the employees names
    department,
    level
FROM employees
WHERE remote_work_ratio > 30
GROUP BY department, level
--ANSWER: the range is 36-75 as count from all 10 departments


-- Question 5: Sort employees by their `hire_date` in ascending order.

"""
I'm thinking of taking it up a notch:
Identify the top 5 oldest employees (based on hire_date) in each department,
along with their years_in_role (calculated as the difference between hire_date and current date).
"""
SELECT
    employee_id,
    full_name,
    department,
    EXTRACT(YEAR FROM AGE(CURRENT_DATE, hire_date)) AS years_in_role
FROM (  
    SELECT
        employee_id,
        full_name,
        department,
        hire_date,
        ROW_NUMBER() OVER (PARTITION BY department ORDER BY hire_date ASC) AS rank
    FROM employees
) AS ranked_employees
WHERE rank <= 5;
-- ANSWER: 12 - the highest in all dept.

-- Question 6: Find the top 5 employees with the highest `billing_rate` in the `APAC` region.
SELECT
    employee_id,
    full_name,
    department
FROM employees
WHERE region = 'APAC'
ORDER BY billing_rate DES LIMIT 5;


-- Quesiton 7: Retrieve all employees with `actual_utilization` below 70%.

"""
Find the employees with actual_utilization below 70%
whose performance_score is greater than 4 and group them by department, 
showing the count of such employees per department.
"""
SELECT
    COUNT(employee_id),
    department,
FROM employees
where actual_utilization < 70 AND performance_score > 4
GROUP BY department;


-- Question 8: List distinct job `positions` in the 'Product Architecture' department.
"""
Identify the distinct job positions in the 'Product Architecture' department 
and count how many employees hold each position, 
sorted by the count in descending order.
"""
SELECT
    COUNT(employee_id) AS employee_count,
    department,
    position,
    ROUND(CAST(AVG(base_salary) AS ), 2) AS avg_base_salary
FROM employees
WHERE department = 'Product Architecture'
GROUP BY department, position
ORDER BY COUNT(employee_id) DESC;
--ANSWER: 12 positions


-- Question 9: Calculate the total billing_rate generated by employees in 'Engineering Delivery.'
"""
Calculate the total billing_rate generated by employees in 'Engineering Delivery' with
actual_utilization greater than 80%, and also find the average billing_rate
per department for employees whose billing_rate is above the department's average.
"""
SELECT 
    SUM(billing_rate) AS total_billing_rate,
    department,
    AVG(billing_rate) AS department_avg_billing_rate
FROM employees
WHERE department = 'Engineering Delivery' AND actual_utilization > 80
  AND billing_rate > (
      SELECT AVG(billing_rate)
      FROM employees
      WHERE department = employees.department
  )
GROUP BY department;